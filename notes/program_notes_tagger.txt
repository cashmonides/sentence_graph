- Dan not coding
- Akiva not coding (working in quiz.js and modules.js and a new mode called input_mode.js)


SHORT MESSAGE SPACE
Dan: made some progress on genitives, needs to be checked more and verified by Akiva
- specifically
    - everything but nonsense and scrambling should be good
    - but not really tested

Akiva: input is debugged and working, font size of input box increased and looking good

Dan: fixed some etymology and added some utils; nothing major

Dan: set up nonsense filters with a domain-specific language

- added functionality: give away answer and wrong answer now occur on the same screen
    - still a little buggy
        - says "whoops try again" when new sentence is given
        - could be better formatted so the give away answer is on its own line
    - future functionality:
        - strip give away answer of all parentheses
        - highlight wrong answer in red where it differs from give away answer


- little bug: one/single/alone is a duplicate root of one/single
    - this is where life gets difficult. these roots are indeed different (MONO/UNI).
    - so the change has to be to the code
    - proposed fix in implementation:
         - two roots
              - with a common word in their descriptions
              - the word being at least four letters long
        - can never be co-answer choices

- when main, iq and is are all options, the drop downs get huge
    - this is fitting in a iq or is sentence
    - but especially with a simple main clause, you get all these irrelevant options (had feared, was fearing)
    - would be best if in a main sentence, the options were filtered to only possible answers
- fixed
    - there is now a function which detects and fixes this kind of thing
    - it is extendible for similar issues

- need to:
    - DONE: lexicon needs to be whittled down for early levels
    - DONE: remove passives from early levels (they don't have the proper cheat sheet)
    - add link to cheat sheet for passives
    - DONE: console log needs to be scrubbed so no correct answers are given away

- weird!:
    a team called the rainbowfishes were playing module 8 and then skipped to module 16 (attempt #3585)
    test555 also advanced a few modules
       this is likely a high priority issue

DISCUSSION

the "input" attack
- recycle previous modes with input as the mode
- advantage: quick doubling of difficulty
- issue: we need to make sure that punctuation and capitalization do not render a correct answer wrong
- disadvantage: no new material covered
- design needs
    - Akiva: modify an existing mode into input mode
    - write a string cleaning program that cleans out punctuation and capitalization and spacing and long vowels
        - spaces: the lion  ate the crow
        - the/a: for now we should probably require "the" but down the road we should accept "a"
             - Dan: if it makes any difference, this is a one-minute fix
             - Dan: it would also allow us to add other pairs of replacements at will
        



the "nonsense genitive" attack
- just make (illogical but grammatical) genitives
- disadvantage: might be harder to understand and be annoying
- issue: might take longer
- current problems that need to be solved in genitives
    - nonsense filter not implemented or tested (not as important)
    - drop_non_drop_map seems to not have genitives
    - need a warning/notification/or the like + a cheat sheet that fully tells them the endings
        (relatively small problem)
        (do the advanced students know about genitives?)
        - they do but it's not on the current cheat sheets
        - also the cheat sheets just aren't really easy to read 
            - they're big pdfs that have to be scrolled through
            - would be better as a table, like the vocab cheat sheet



possible general thing needed
- notification box
- saying, i.e., the game is under construction
- this level has genitives and the genitive cheat sheet isn't here

BRIEF AGENDA
- DONE: fix accuracy metrics bug
- DONE: add email,name,class,etc.
- DONE: grade 13 words deleted
- DONE: comment out old accuracy dictionary and remove from table (leave it in but just commented out for now)
- genitives
- error logging parser
- debug new etymology levels (470)
- vocabulary cheat sheets need 3rd declension genitives
    - right now it's *AVIS* (3) bird
    - it should be: *AVIS* AV- (3) bird
- change default order of iq to verb-final
    - (it has pedagogical value by increasing the minimal-pair contrast with is, which is verb final)
- test multiple computers causing an ajax / latin sick mode / multiple modules in progress simultaneously
- replace old accuracy table with an aggregate accuracy in time_metrics
    - e.g. start_time stop_time aggregate accuracy
    - (this info is technically reproducible by the other table and so is redundant but for ease of reference without writing sql queries, this provides a good hourly report format)
- start to remove dashes at the higher levels
    - each module will have a property with a boolean value (noun_dashes, verb_dashes, stars)
- shrink images (images are too big in the lightbox at the end of the level)
    - causes slow loading and in some browsers the "x" that closes the lightbox is moved off the screen (which is pretty disastrous since it stops all progress)
- cheat sheet buttons don't work on surface tablets running explorer



GIO questions



BUGS
- unknown bug: infinite run and running out of memory space
    - recently, running things on cloud 9 triggers a message of insufficient disk space
    - also the red box appears where the green arrow is and stays red, suggesting getting lost in an infinite loop
    - there are presumably temporary files in our git (start with ~    lib/.~c9_invoke..
    
- BUG: admin page is buggy
    - sensitive to bad data (some quick fixes installed if mod.metrics doesn't exist)
    - currently it lists a lot of scores (not sure if it's complete) 
    - but: Uncaught TypeError: Cannot read property '0' of undefined


- BUG: accuracy metrics is buggy


- BUG: etymology mode is sick in module 8
    - "root not found in roots: VERTEBR"

    
DETAILED AGENDA ITERATION 1.5



- add genitives
    - genitive agenda: 
    - make a parameter in module - 
        - genitive_quantity (range of min & max)
        - genitive_number: ["singular", "plural"]
        - genitive_scramble: (bool)
    - get the program to produce two words, one of which is genitive
    - get the program to translate the words into english
    - put all that in one drop down
    - test with nonsense genitives (the frog of the bear loves the dog of the cow)
    - add nonsense filters
        - the head noun of the genitive pair should be king, queen, father, etc.
        - add parameter to lexicon: 
            - genitive_head: bool 
            - genitive_tail: bool
            - e.g. king....gen_head: true, gen_tail: true   
            - e.g. sword...gen_head: true, gen_tail: false    (no father of the sword)
    - put in two drop-downs
 
- create lexical properties that allow for dative and ablative and genitive sensitivity
    - abl. of means: oppugn, any passive
    - dat.: give, speak, show
    - genitive: 
        - x + anything that's animate: father, mother, son, daughter, brother, sister, sword (& other inanimates) 
            - if kinship === true, then gen_head + animate
            - if animate == true, then gen_head + animate
        - x + places: king, queen, god, goddesss
            - - if rulership == true gen_head + place
        - x + animal: king, queen, god, godesses
            - if rulership == true gen_head + animal
        - model A
            - lexical property is:
            - gen_head: [bool, y]    //where y is the acceptable class of tails
                - false
                - true, 'place'
            - another lexical property:
                - word_type:
                        - place, animal, respect
        - nonsense to avoid:
            - anything + inanimate: the father of the sword, the frog of the sword
            - animal + animal: the frog of the lion
            - certain things + animal: the sailor of the lion
            - inanimate + inanimate: the sword of the spear
        - improprieties to avoid
            - humans eating animals
            - anything eating or killing gods
        - lexical categories that can be bools:
            - animate  
            - inanimate  
            - place 
            - animal
            - human
            - rulership (king, queen, god, goddess)
            - kinship (father, mother, brother)
            - respect (god, father, mother, etc.
        - example with queen
            - core: {part_of_speech: "noun", animate: true, place: false, animal: false, human: true, rulership: true, kinship: false, respect: false},
            OR
            - core: ... gen_head: [true, [place, animal]
        - function that makes genitives
- cosmetics of etymology cheat sheets should be improved
    - bigger space, different font
    - underline the left hand column (whether it's a root or a word)
    
 
- write an error logging parser
    - quantity of each type of error
    - like this:
        - type: {
            quantity:  (int),
            most recent date:       (str)
            date: [3-12, 3-17]     (list of str)
            example:    (1 json formatted example)
            context:         (basically a set - a non duplicating list of contexts - e.g. "quiz.next_question)
            }
    - if all contexts are identical, return context as well
        - e.g. if all contexts are next question



- write an error cleansing function
    - delete every error  (with a certain property - e.g. older than a certain date)
   - store those errors in a text file or a log somewhere (cold storage, not taking up space in firebase)
   
- the scrolling on grammar cheat sheets is not great
    - a zoom button would be nice
        - -moz-transform: scale(2);
        - Zoom and transform scale are not the same thing. They are applied at different times. Zoom is applied before the rendering happens, transform - after. The result of this is if you take a div with width/height = 100% nested inside of another div, with fixed size, if you apply zoom, everything inside your inner zoom will shrink, or grow, but if you apply transform your entire inner div will shrink (even though width/height is set to 100%, they are not going to be 100% after transformation).
    
    


- defensive programming against "no allowed lexemes"
    - currently it seems like it does this:
        - the program asks for n lexemes
        - if the constraints can't produce n lexemes it throws an error and shuts down latin mode
    - what should happen:
        - the program asks for n lexemes
        - if parameters can't produce n lexemes, it still tries to make a sentence at a lower module's parameters
        
- DONE: defensive programmings against not having enough items to fill the extras
    - if it can't produce n extras, it produces n-1, if it can't produce n-1, it produces n-2




- for ease of reading, make a "word padder"
    - padding around units makes them easier to read and reinforces the structural segmentation
    - REX INSULAE   GLADIOS LEONIS   LUPO   DONABAT
        is a lot easier to read than
      REX INSULAE GLADIOS LEONIS LUPO DONABAT
    - each module will have a property   "padding" : INT
    - padding: 3 would be 3 spaces between each grammatical unitunit
    - the amount of padding GRADUALLY reduces
    - 
  
    

CHORES - BIG
add more animal modules
add more sentences
add more etym levels
reduce image file size  (e.g. there's a bear that loads slow)

CHORES - LITTLE
delete test users
- chore: play on explorer and look for urgent errors

- chore: play all the levels and see if chicken has errors


- chore: update modules


- BUGS from urgent error log
    - DONE: purge sets
    - MADE BUT NOT TESTED: cannot read property meaning of undefined (etymlogy module 4 & 14)
    - DONE: no allowed lexemes in latin mode module 11 & 14  
        - one possible short-term fix:
            - add a bunch of lexemes to the higher level
        - medium-term fix
            - revert to lower module and log urgent error
        - DONE: long-term fix
            - make the N parameter a max, not a requirement (e.g. N = number of extra nouns)

- (possibly fixed) BUGS from observation
    - etymology cheat sheet seems to contain a list of words without the target root
        - e.g. "what is the the root that means "two"" & none of the choices contain BI
    - 

- BUG??: metrics perhaps not getting recorded properly in firebase
    - not sure how frequent this is 
    - but: metrics was not recorded for module 2 for Muna (5th student in firebase)
    - quick fix:
        escape loop written in (if mod.metrics == null return)
    - need to figure out how to not write a module without metrics
    - check in with muna's account after she plays some more
    
    








- small: make post a quiz method and have it automatically check for user.id = null


- DONE: bug: cheat sheet button doesn't make it disappear

- update github issue wiki

- question: is this an obsolete error from log.txt? Does it ever occur again? Is it just caused by an anonymous user?
12:15:27: DEBUG: error
12:15:27: DEBUG: (<type 'exceptions.KeyError'>, KeyError('REQUEST_METHOD',), <traceback object at 0x7ffb633d43b0>)

- comment and understand new code (security stuff)




- close window event should trigger logout
    
    - two possibilities perhaps?
        - window.onload
        - window.onbeforeunload
        window.onbeforeunload = function(e) {
            return 'Dialog text here.';
        };

- alert message if back button leads to another person's account (currently goes to anonymous)


- our grade 13 filter doesn't seem to be working

- permanently remove carnal and necrophilia just in case

- team names as a field

- cheat sheet doesn't scroll all the way to the bottom
    - prob. because scroll is locked on the page
        - this was done to keep the question always at the top


- get rid of that annoying red flash during refresh (and also the flash of buttons between questions)


- CARN might have a long/short vowel conflict


- chore: play through all levels in all browsers
    - look for broken chicken in internet explorer
    - - check if module 9 has something sick. The following was logged in urgent error log:
    custom_message: ""sick mode = latin module = 9 progress = 0/10 level = [object Object]""
    date: "Mon, 29 Feb 2016 18:36:50 GMT"
    error: "Error: There are no allowed lexemes!"
    
- fix anonymous mode




ITERATION 1.75


- live in class monitoring of activity
    - one example:
        - a vector associated with each student
        - length corresponding to rate of input (# of answers per minute for last few minutes)
        - slope corresponding to accuracy
    - color as a form of visualization
        - turns red as they have less activity




- make a maximum number of urgent error logs for every uid 
    - currently refresh will keep adding
    - BUT: we want to get urgent error logs for users who play long sessions




- add root: VERTEBR & words: vertebrate, invertebrate, vertebra & make sure to add to etym levels
- add root: CELL and words: cellular, multicellular, unicellular, cellulitis, celluloid, cellulose
- add new words which Akiva gathered (webscrape for definitions and check)
- add "gigantism" to etymology



ITERATION 2.0
- new mode: "id"
    - example: 
        - classify the highlighted word:
        - LUP-US CORV-UM VOR-A-T   
        - choices: subject singular, object singular, subject plural, object plural (at a low level)
        - choices: nom. sg. acc. sg. (at a higher level)
    - generate a latin sentence
    - generate a dictionary:
        - highlighted index
        - correct answer
        - answer choices
- some way of checking the tagging on sentences
    - perhaps a utility that vacuums all the data from firebase and displays it with tags directly above the words in the sentence

- add tutorials
- jquery dropdowns
- clean up, simplify, modularize and comment latin generation before adding gen/dat/abl/conditional
- add genitives
- add datives
- add ablatives
- specify in lexicon what words can take the dative and ablatives and genitives
    - certain words can only have inanimate objects
- drop-down headings (subject, verb, object) that aren't clickable and have a different font, in small caps and half opacity
- disable prompt "do you want google chrome to remember your password" 
- minify certain files for security reasons???
- final image is currently "get ready to conquer + image of next animal" it should be the current animal
- clean out / possibly remove log from firebase (looks like it's a weak duplicate of urgent error log)
- clean out all console.log
- log accuracy attached to mode
- third party log-in (facebook or google?)
- etymology synonyms and antonyms
- instant access by admin to punish off-site activity during class

- is there any way to prevent/punish/alert "off site activity" during a session
    - timeout button (more than 60 seconds)
    - low activity button (less than one button click per 30 seconds)
    - detect a new tab



- acccounts ending in tag.team must be playable only in class
    - when tag.test is detected an additional page/password box is generated
    - accounts ending in tag.solo will be playable anytime

- create a function that allows us to write a new user with an arbitrary level
    - e.g. if we want to test level 27 and not play all the way up to that level
    - we write a function that takes the argument of 27 and writes to firebase a user with completed modules up to 26
    



OLD ITERATIONS BELOW



PROGRESS NOTES iteration 1.0     (old progress notes archived at end of program_notes)
- Akiva: added a file called taxonomy.js and taxonomy_notes.txt
    - taxonomy_notes.txt is a rough draft of the program design for the taxonomy unit
    - taxonomy.js has a map of taxonomic classifications for wolf-eagle
- Akiva: added sentence.difficulty_level to tag.js (i.e. Shakespeare gets a 10, mother goose gets a 1)
- Akiva: cleared sentences and started tagging new ones (but tagging is now buggy)
- Akiva: got sql to work
- Akiva: changed persist so progress would be persisted; this may impact rollover
- Dan: modularized cheat sheet creation; etymology cheat sheets not yet started
- Dan: added primitive etymology cheat sheets
- Dan: made asterisks word characters
- Dan: cheat sheets were getting rather long and complicated so they were put into their own file
- Dan: make also now in its own file
- Dan: font sizes corrected




- DONE: 
- refactor the SQL posting
    - Gio's suggestion:
        - having 16 columns is unwieldy and also will make querying less flexible
        - an alternative: 
        - make another table, call it the accuracy table
            like this:
            attempt_id		0	1	2	3	mode_enumeration	
            7641            6   1	0	0	“drop”  
            7641            6   2 	0	0	“quick”
            7641            3   3 	3 	8 	“latin”	
            
            attempt_id is the unique id (primary key id) of the time_metrics
            e.g. in the above example, 7641 is the 7641st row in the time_metrics table
            
        - one advantage: if in the future we institute other modes (e.g. id or labyrinth)
          we won't need to multiply columns endlessly, we'll just add new mode_enumerations
        
    - whenever you have two tables that relate to each other, you have to be careful that they line up
        - so very important: when we create the new post to the new table
            we need to make sure we don't stop doing the old post (accuracy_drop_mode_0 etc.)
        - that way, we'll be able to compare them and see if they line up
        - when we've tested it thoroughly and are sure the two tables line up, then we'll remove the old columns (accuracy_drop_mode_0)


 
 
 

HIGH-PRIORITY BUGS
- dashes get interpreted as word breaks in latin
     - Dan: I'm not sure what this means. They work well in tag.
- (this might be fixed) unexpected token # still happens even after the following steps:
    - .htaccess file is in the same folder as sql.py and reads:
        Options +ExecCGI
        AddHandler cgi-script .py
    - chmod 775 sql.py has been typed in the command line
    - in command line ./sql.py gives a new command line which is indicative of success (i.e. sql.py is executable
- back button leads to previous users profile (should just log them out and not expose secure content)
    - info on this is now logged in a new notes text called security.txt (a gathering place for all info about security)
- remove reliance on sets entirely
- old chrome browser do not seem to work at all (utils 109???)
    - dan thinks he fixed this by decreasing reliance on sets
        - more testing is needed

LO-PRIORITY BUGS
- anonymous user doesn't get progress updated on profile page (one solution: disable the return to profile for anonymous users)
- 5 modules on first row 
- hoverable latin
- firefox is not responding to our small image solution
- answers that are two regions (i.e. two words like 'many things') don't seem to be selectable as answers
- auto-tagger seems to have main and subordinate clauses as undefined
    - undefined = subordinate clause is what the auto-tagger returns
- certain types of etymology questions are too easy
    - in the short term, we should disable them
    - down the road (or perhaps now) we should add a method of weighting question types to module


???QUESTIONS????
- do asterisks work in the tagger?
    - dan tested and they do now


CHORE
- input lots of new sentences
- comb through and look for sets
- add modules up to 25
- add extras and drop options to early modules

AGENDA
- etymology cheat sheet
- etymology question types

NOTES ON SQL
going from "accuracy_" + i + "_mode" to just i (but it will be accuracy_drop_mode_3)

NOTES ON ETYMOLOGY CHEAT SHEETS
- there might be multiple types of cheat sheet for any given question, some of which are better than others
    - what is the of the carnivorous
        - root to english_root
        - word to word definition
- some questions are very easy and should be included with caution
    - e.g. what is the root of the word carnivorous [carn, omni, herb]
- 'word_to_latin_root', 'word_to_english_root', 'word_to_translated_root',
- 'english_root_to_word', 'word_to_word_definition', 'word_definition_to_word',
- 'root_to_root_definition', 'root_definition_to_root'

NOTES ON CHEAT SHEETS
- progress needed
// In the future, we will add headers,
// change the map function to include declension or conjugation.
// and add different rules to cheat sheets to allow them to have
// any number of columns.
- iteration 1.2 perhaps?
// Etymology cheat sheets should not simply be randomized.
// Etymology answer choices should also be sorted.
// Both these changes should be easy.

It is believed that everything pertaining to the Mystic Dualogical Paradox
(MDP) has been successfully cleaned up by the shadowy Debuggers,
with no remnants that it ever existed. This had the side effect of
restoring font sizes, which gift they deigned to give
to our Type .7 civilization.

ITERATIONS
ITERATION 1.0

- *needs thorough testing but done* filter sentences by difficulty and languge
- *done* make difficulty and sentence_language properties of module
- *done* add password to tagger (change the name to something bizarre enough so no-one guess)
- *done* get rid of naughty words
- *done* add predicate and adjective to tagger
- *done* make cheat sheet open in a new window or make it the proper size
- *done* enter fields into profile (grade number, school, first and last name 
- *done* email should be stored in firebase profile info
- *done* vocab cheat sheets should live above image cheat sheet
- * done but needs some more testing* - add etymology question types
    - word to word_definition   "What is the meaning of the word QUADRUPED?"
    - root to root_meaning   "What is the meaning of the root PED?"
    - root_meaning to root  "which of the following roots means "foot"?
    - root to word    "Which word has a root meaning "all"?
    - word to root    "Select the root of the word QUADRUPED"





- add definitions to etymology (so they see definitions early but not later on)
- duplicate tags are not getting removed
    - e.g. LUP-US = noun, object, noun (small but possibly important bug)



- auto-recognition should be turned off or different for latin mode 
    - maybe a button called "delete_all_auto_tags"
- size of text with drop downs
- test compatibility on different browsers
- revisit admin page, check that it's working
    - add number of iterations per module
    - ultimately we'll do all this with sql but for now the admin page does something that sql can't do which is measure accuracy

- urgent: update cheat sheets
- urgent: the feedback is sometimes not very clear. It says "the right answer is..." while the question has been replaced 
    - possible solution: in latin mode, display the sentence and the translation together
- add some urgent error logs at some judiciously chosen critical spots in the control flow
- add M&F syntax categories in latin
    - cases (implies noun)
    - tenses (implies verb)
- password protection on tagger is working but very small problem: someone without the password gets trapped on the page - should be a quit button that closes the tab
- fix anonymous users
    - when they conmplete a module, instead of document.location going back to profile it should go to the next module



ITERATION 1.5

- grammar cheat sheet (iq and is, verb and noun endings etc.) should be a scrollable window
    - stack overflow ideas here: 
    http://stackoverflow.com/questions/7504918/how-to-create-a-div-with-vertical-scrollable-contents-and-fixed-footer-which-is
    - another link here
    http://www.quackit.com/html/codes/html_scroll_box.cfm

- prevent back button from accessing previous user's account
    - very important but might be too hard to solve without an expert
    - a difficult problem
    - gio had no ready solution
    - potential solution:
        - create a field in the firebase profile of each student
        - call it "logged_in" = true || false
        - this bool is set when they log in or out
        - every time they initiate an action, this field is checked
        - if it's false they are given an alert ("you have been logged out of this account - please log in")
        - and redirected to the login page
        - the question is:
            - at what point should this boolean be checked?
            - ideally it would be checked every time an answer is submitted - but will that be too computationally expensive?
    - notes are in the file security.txt

- defense against being logged in on multiple computers simultaneously and multiple windows
    - maybe: create a field in firebase: logged in [true/false]
    - if you login again (from a new computer or window) it logs you out of the old one
    - prevent:
        - user plays at home, is up to frog
        - goes to school, beats 6 levels and is at level lion
        - goes home and plays frog again
        - solution: when they play frog, they get a message, you've been playing... and go to profile and be on lion
    - encourage:

    - potential call sites
    - functions for solution
        - generate string DONE
        - check for string DONE
        - persist string to player profile in firebase DONE
        - alert two computers
        - return to profile
        - alert logged out
        - return to login





- FIXED: SQL post error
    - remove comments from post statement
    - check log.txt
        - some of the fields seem to be wrong   



- DONE: score increments should be tweaked
    - (psychologically: there should never be a point where the player cannot win any points = encourages defeatism)
    - correct on first response  = +4 points      x
    - incorrect first response = -2             -(x-1)
    - incorrect second response = 0
    - incorrect third response = 0
    - correct second response = +2               +x/2
    - correct third response = +1                +x/4


- DONE: make urgent log max out if it starts producing a lot of logs


- vocabulary cheat sheet should include declension and conjugation of verbs and nouns      
    - DONE: hi-priority: declension and conjugation number
        AM-ARE (1)  love
        TAUR-US (2) bull
        - numbers not in bold
    - DONE: lo-priority: 2 side by side tables

*****current progress*****


WEDNESDAY AGENDA:



GIO QUESTIONS
- is it better to have a single table that shows time of completion and accuracy or is better to di ide them up into separate tables 
    - (i.e. is modularity a virtue in sql tables or is it better to keep things all together so there's less danger of getting out of sync)?



CHORE
- add more animals




MAJOR BUGS



UNKNOWN BUGS???




- if we have too few images do we get bugs?

- profile throws error
log_error initiated
TypeError: undefined is not an object (evaluating 'mod.id')
column: 34
line: 122
message: "undefined is not an object (evaluating 'mod.id')"
sourceURL: "http://sentence-graph-cashmonides.c9.io/profile/profile.js"
stack: [very long so deleted]
TypeError Prototype
No actual problems were noted.
  - This was a bug symptom and is believed to be gone,
  as discovered on January 18th (but not noted here until the 19th)

TODO 
- test getting wrong answers
- test logging/logging in/ creating duplicate accounts/forgetting passowrd



URGENT LUXURIES
- change hover behavior
    - for levels that aren't clickable:
        - cursor should just be normal (arrow)
        - no red
    - for levels that are clickable:
        - cursor should be hand
        - red
    - clickable levels:
        - frontier
        - improving (if an improving module is already set)
        - all pre-frontier levels (if no improving module is already set)
    - give levels clickable property? function? ???
- turn off opt groups for nouns (only useful for verbs)
- to improve clarity: first item in latin drop downs should be subject, verb, object (even if they're clickable - we'll fix it in iteration 2)
- check to make sure this is fully operational: users with special email addresses (2nd graders who don't have their own email witll be given dummy account with tag.bestiary & lls.bestiary)
    - these users must not be able to click on the reset password box
- when children enter password it should be hidden


LESS URGENT LUXURIES
- definition and synonyms in etymology mode
- sentences should have a difficulty level
- custom alert/confirm box (some raw code for this in profile.js)
- a more sophisticated version of the overlapping tags with a level-sensitive list
    - at an early stage (before substantives are introduced): adjective and subject can coexists
    - at a later stage (after substantives are introduced and a substantive is the answer): adjective and subject cannot coexist
- etymology mode should lose the testbox
- cleanup: make sure the information we migrated to their own levels (etymlevel, grammar level etc.) doesn't live anywhere else    
- give away answer should occur on the same page as question, so they can compare the question with the right answer. As is, they need to remember what the question was from previously. And it overlaps with the current question which is just confusing.
- cheat sheet for etymology
    
NOT AT ALL URGENT LUXURIES
- the following code seems wrong in login.js so Akiva changed it but check if it's ok when more time(if user is invalid they shouldn't be told a password reset has been sent to your email right?!)
var callback = function(error) {
        if (error) {
            switch (error.code) {
                case "INVALID_USER":
                    console.log("The specified user account does not exist.");
                    alert("A PASSWORD RESET HAS BEEN SENT TO YOUR EMAIL");
                    break;
                default:
                    console.log("Error resetting password:", error);
            }
        } else {
            console.log("Password reset email sent successfully!");
            alert("A PASSWORD RESET HAS BEEN SENT TO YOUR EMAIL");
        }
    };
- transitional lightbox image (i.e. you beat wolf and move to horse) should be special and fun and instill a sense of adventure
- there shouldn't be 5 images on the first row (only 4)






3) find a few judiciously chosen places to put urgent error logs


4) clean up cosmetics as best we can (different sized font, drop down headers)

4) thoroughly test (maybe by cycling through all the levels)


5) release to the students and monitor the urgent error log






AGENDA IN GENERAL
- refactor so we call latin_level and etym_level separately from module
- isolate latin_display parameters into their own dictionary
    - drop
    - swap
    - none
    - dummy items
    - etc.
- try persist.push method for module and submodule
- make sure nothing gets persisted for anonymous users
- tutorials
- debug etymology mode
- converting short & simple drop downs into word selectors (to resemble quick mode)
- add fill in the blank mode
- refine vocab cheat sheet (header with part of speech)
- look at / clean up the make output flow with a view towards adding adjectives, ablatives, genitive
- taxonomy
    - write it as we've been doing using JSON and javascript
    - write it in SQL
- read/write permissions
- remind akiva what shuffle: [true, false] means
- test whether e.g. max 3 dropdown still works when we have only subject and object with non-zero values
- isolate all issues of display from latin grammatical info, put it in a different kind of entity called something like "latin display level"
    - drop
    - none option
    - dummy items
- we need to make sure we have independence between:
    - A - what parts of speech options they see to choose from
        - they can't be given a choice like coordinating conjunction if they haven't learned it yet
    has to be independent of
    - B - what parts of speech they are commonly tested on
        - since we don't want to test easy parts of speech as often at advanced levels
- likewise, we need independence between:
    - A - what roots they are given choices of 
    - B - what roots we ask about a lot
- make a semi-final choice about what lives where
    - should live in its own file
        - latin_level
        - etym_level
    - might be simple enough to live inside of module
        - part of speech filter
    - lexicon can get very verbose so maybe it should live in its own file but it's nice to see it in each module
- add synonyms to etymology mode and a type of question that asks about synonyms
    - web-scraping for synonyms on thesaurus.com:
        - each synonym string is preceded by the string "thesaurus.com/browse..."
        - synonyms are the child of child of a div called: id="synonyms-0"
        - but unfortunately so are antonyms, so we want to look for:
            - div called id="synonyms-0"
            - child of that div called: id="filters-0"
            - the string preceded by thesaurus.com/browse and ending with "
        

NON-PROGRAMMING
- proofread modules for mistakes and consistency
- proofread levels for mistakes and consistency
- make all levels
- add modules for all animals we have sillhouettes for
- find/make sillhouettes for missing animals
- make some taxonomy data
    - as JSON
    - as SQL??


LEVELS
- latin grammatical level
- etymological level
- taxonomical level
- grammar level (parts of speech filter)
- tagged latin sentence level
    - (i.e. what sentences they have to answer in latin)


JQUERY GOALS
- hover over a word and get a sillhouette or vocab help (sillhouette should flash and then fade out)
- nested drop down
    - love/eat/carry
        - active/passive
            - loves / loved/ will love / had loved etc.


- some issues around fading background images
    - from stack overflow: "You can fade background colors but not background images. The way to work around this is to have your images as <img> tags and hide them by default display:none;. Give your images position:absolute and z-index:-1 so they act like backgrounds and are behind everything else.





THREADS
- from thread of execution
- basically the set of mechanisms that run procedures in sequence
    - get name of user
    - look up phone number
    - display phone number on screen
- in the old days computers would do something called "context switching" - switching between tasks so quickly that no one notices, but never doing two things at the same time
- an AJAX request and a response are going to use different threads
- since they're on different threads, the control flow cant simply continue on the request thread
- a callback does this:
    - it has no relation to the calling thread
    - it starts a new thread of execution
    - callback tells the new thread what it's first thing to do is

CALLBACK


THE SQL APPROACH
- javascript program sends the python program an AJAX request
- python program responds by writing to a SQL database that is hosted on Media Temple

- python program lives on media temple in part of the server on media temple

- python mysql
- python cgi (common gateway interface - how programming languages interact with a web server such as cgi)

- mediatemple mysql
    - look up database in mediatemple
    - upload a schema
    - make sure database account is set up in mediatemple
    
- library vs framework
- old dbeaver stuff
- install dbeaver




TAGGING - needed functionality
- how do we deal with levels?
    - goes in metadata 
    - but how do we keep track of how hard it is
    - options: M&F chapter number
    - ????
- add to module whether we want latin or english sentences or both
- associate some metadata with the sentence
    - e.g. if it's from Moreland & Fleischer and which chapter etc.
- clause-assocation: there  are properties of each clause called subject, object, predicate (they're currently null)
  we want these to be filled with the appropriate thing
    - "\"subject\":null,\"object\":null,\"verb\":null,\"predicate\":null,\"clause_type\":\"main\""
    - if the tag is of the category subject (or object predicate verb)
    - then find the clause region it's in
        - do we need a "detect clause we're in" function?
        - is there a problem with overlapping clauses
        - should we write a function that looks for overlapping clauses
            - magister mihi librum donavit quem dixit legendum esse
    = write the indices to the subject property of that clause
- tag-removal:
    - we want to be able to remove all tags
    - if problematic at the clause level, we should at least be able to change it to unspecified
    - a tag should replace previous tags (except where not contradictory)
        - e.g. if "we" is autotagged as a personal pronoun and it's tagged manually as a subject
        - e.g. if "first" is tagged as an adjective and it's tagged as an adverb
    - non-contradictory list    
        - pronoun || personal pronoun : subject, object, predicate, noun
        - definite article : article
- contradiction-testing
    - some automatic way of testing for contradictory tags
    





TAGGING - bugs




ERROR LOGdata
 context
 custom_message: 
"sick mode = latin module = 4 progress = 1/2 lev..."
 date: 
"Thu, 31 Dec 2015 01:06:32 GMT"
 error: 
"TypeError: Cannot read property 'push' of undef..."
 user: 
"f2f2e1e7-1249-4678-aea1-6d15563fe87a"

?????
log_error initiated TypeError: b.replace is not a function(…)


TIMING
gap between was 4 sec/ 50 sec
horse start time 1451437464816



OLD CROW
submodule_time_metrics
 0
 0
 0: 
1451437413849
 1: 
1451437450574
 1
 0
 0: 
1451437455540
 1: 
1451437461245



ITERATIONS
1
    - release a version to the kids in january
    - looking at firebase data carefully, especially urgent logs and basic stats (what's hard, what's easy)


2
    - fix what's wrong with 1
    - cosmetically improving things (e.g. drop downs with backbone & jquery)
    
3/4 or 5 (depending)
    - rebuild from scratch (possibly with angular)
        - phase A:
            - rebuild html stuff
        - phase B:
            - rebuild things that don't effect html (e.g. latin production)
    - modular 
    - include other languages    



UNORDERED AGENDA
- fix time stamps
- creating multiple choice as word selectors
- look at errors in firebase urgent errors log
- tutorials


BUGS IN TIME STAMP
- start time of submodule and module aren't the same
    undefined
     start_time: 
    1451368989265
     time_metrics
     0
     start_time: 
    1451368981526
    - in one case I logged a difference of -341 seconds! (-341857 milliseconds)


BUGS IN LIGHTBOX
- some images are too big

BUGS IN FIREBASE
- are we hitting the wall with number of records in firebase?
        - or is it just a matter of hand-cranked mexican wifi?
        - the error in firebase is:
            "Due to the number of records being displayed at this location, the data viewer is in read-only/non-realtime mode to increase browser performance. Click on a key with fewer records to see a realtime view.


BUGS
- improving status seems to get triggered when it's advancing???
- sometimes we get a highlighted word and an etymology question at the same time    
    - e.g. "the cows eat the grass" - what is the word containing the root meaning "all"


On etymology:
- bugs   
    - word selector isn't cleared (e.g. equus portat corvos in etymology mode)
        - remove box altogether?
    - wrong answer feedback is "excellent"
    - are incorrect answers deducting too many points? (it seems to go down)
- needed functionality
    - dummy answer needs to be completed
    - etymology level needs to be stored
    - add definitions
    - store data in firebase so that we know how many times a word was seen
    - add grade level
        - carnal, necrophilia, etc
        - short term solution: disable them by having them be grade 13
        - long term solution: store the user's grade
    - better formatting
        - drop downs should be changed to clickable words
        - box
    - 3rd party authentification in firebase (google, facebook, etc.)





BUGS
- latin shouldn't be hoverable
- mod.iteration seems to be 0 - can we live with that?
- lightbox image seems to be problematic at some points 
    - for frog:
    - only three images in frog
    - the following threw a error of "Uncaught TypeError: Cannot read property 'length' of undefined"
    - (this.user.data.history[mod_id].progress - 1) % image_list.length];



FUNCTIONALITY
- the top item in drop down (e.g. noun, verb) should appear in the drop-down menu as a default (and of course it shouldn't be selectable)
- drop down menu is overdoing for drop mode
    - where there are only 3-10 items (such as subject, object, verb) the drop menu just slows down the user experience
    - refactor it and change it to a version of quick mode (where the options are just listed as clicakble)
    - of course would need to call it something else eventually
- finishing an advacning level should take the user back to improving
- lightbox images take too long to load
- each mode should log percentage right and wrong in the metrics, so we know which modes are too hard or too easy

NON-LATIN LEVELS
- create levels for the non-latin sides
    - etymlevel
        - what roots they know
        - done
    - gramlevel 
        - what parts of speech they know 
            - (since they can't be told "incorrect, that's a subordinating conjunction when they're still in the early stages and don't know that term)
        - what parts of speech they should be tested on 
            - (since we don't want easy stuff tested at every level)
            - (and since we want to control how often they're tested on certain things)
            - e.g. we want to test subject a lot when we're focusing on the passive but not very often when we're learning about conjunctions
    - taxlevel
        - what categories they know
            - quadruped is relatively early
            - exothermic is relatively late
        - nuance: the meaning of categories change as they progress
            - e.g. at an early stage we have ped: [quadruped, biped] 
            - but at a later stage we have ped: [quadruped, biped (originally quadrupedal]
        - another nuance: the certain categories are too advanced for certain animals at an early stage
            - e.g. when they hit whale early on, they shouldn't be asked about its PED property, since it's not apparent
            - but later, when they learn about vestigial limbs they should be tested on it
            - so at an advanced stage we would have:
                - ped: [quadruped, vestigial quadruped, biped (originally quadrupedal)]


USEFUL TO ADD
- get_level method





AGENDA IN DETAIL
- read/write permissions
    - firebase has some capability of preventing users from hacking it
    - involving the "rules" section
- vocab cheat sheet - 5
    - heading that says nouns and verbs
    - organize lexical items by part of speech and alphabetically (ideally by latin)
    - display should match handouts with the right font size and dashes
    - finer-grained control of appearance of things generated by the make function  
    - e.g. in vocabulary cheat sheet we have:
        - EQUUS horse
    - what we might want:
        - horse in italics
        - EQU- big font and bold
        - -US smaller font and not bold

- tutorials - 2
    - try and make a test run of the tutorial
    - JSON object with fields like text, question, right answer

- a complete run of modules - 7
    - do a test once we have new modules

- error logging and error handling - 3
    - review error handler
    - record mode
    - record level
    - record sentence  
        - maybe: ever mode has a method called "spew info"
            - spews sentence
    - whether it terminated the game 

- error handler - 4
    - escape route where it doesn't freeze up
        
        - escape route type 1 - stay in mode (wraps random choices in Latin)
            - in latin mode: there are many random choices
                - e..g from lexicon
                - e.g. from tense
                - sometimes there's a contradiction because of badly laid parameters
                    -e.g. a level may demand 3 nouns of feminine gender but there's only 2 such nouns in the lexicon
            - (instead: refactor so it doe
            - if error, pick a new question- 
            - if error in lexicon: pick 
                - if a lexicon wants ten lexicon items for drops and dummy drops etc.
                - but for bug-based reasons there's only six available, 
                - then 
                    - just use 6
                    - log the error in a special place where we can see it
        
        - escape route type 2 - 1 location (pick mode) escape from mode
            - if error, then pick new mode that's not this mode


- etymology mode - 6

- refactor our metrics to record timestamp of start and stop - 5
    - a frustration metric
        - every submodule that opens, send a time stamp to firebase
        - if the submodule ends, we send the difference in time to firebase
        - if a submodule only has a start time - it shows they quit
        - "in class quit" vs "out of class quit"
        - always use absolute time
    - needs to be both initiated at beginning of submodule and uodated at end of submodule
    - because ifiut gets a time stamp at opening but not at close, it can be logged as abandoned
    - after all, we want to track abandoned submodules because they might be too difficult or buggy
- more ambitious metrics: - 6
    - record "progress bar animation" at close of submodule







DO WITH GIO
- how to remove resources from git
- go through the time stamp of metrics
- admin tasks like:
    - who's playing right now?
- 

ASPIRATIONAL
- SQL database for metrics
- clickable charts
- fill in the blank mode



ETYMOLOGY
- modeled after quick mode
- list of answers as clickable wordSelector object

TODO CHORES
- erase all users******
- write up a bunch of tutorials
- enter animals
- make modules
- get all animal sillhouettes******
- refactor animal images into folders


sillhouettes needed


TODO WEB RESEARCH
- clickable charts

TODO HARD


TODO MEDIUM
- put vocabulary cheat sheet into a table

TODO MILD




TODO SKETCH OUT
- make tutorial function
    - takes a tutorial JSON object
    - uses make function to make html
- error handler
    - if can't make a question, change mode
    - record the error in a different log
- strictly additive aspects etymological
    - all previous plus x,y, z
    - or
    - only x, y, z




FINISH VOCAB CHEAT SHEET
- sort alphabetically
- sort into nouns and verbs
- convert JSON into a table and make font smaller





PROTOCOL FOR 2ND GRADER WITHOUT EMAIL
- clicks on special log in
-enters name "john"
- append @lls.com



CHANGE LOGIN SO THAT IT HAS A LITTLE SIGN UP BUTTON AT THE BOTTOM




TEST NON-EMAIL USERS
john@312.tag


ADD TRY/CATCH IN CRUCIAL SPOTS IN THE CONTROL FLOW




ADD TIME STAMP OF ANSWERS
record event (i.e. records a correct/incorrect answer and a time stamp inter alia)


BLUR AND DIM FUTURE ANIMALS


PICTURES
fix size



FIREBASE RULES and security















ETYMOLOGY MODE

FILL IN THE BLANK MODE






CROSS BROWSER 
all sets










THE TERMINAL APPROACH TO UPDATING MEDIA TEMPLE
- make sure your local git repository is up to date


- go to terminal
- run this: ssh s211804.gridserver.com@s211804.gridserver.com
- cd (/home/211804/users/.home/) domains/s211804.gridserver.com/html
- git pull origin master







USING SSH TO CONNECT TO MYSQL ON MEDIA TEMPLE
//connect to mediatemple via ssh
ssh s211804.gridserver.com@s211804.gridserver.com

//start the python shell (it will be version 2 not 3)
python

//we test whether we have the mysql library by running this and hopefully the import doesn't fail
import _mysql

//exit out of python shell
exit()

//exit out of ssh
exit

GIO
- mediatemple
- go through 
- alert error messages
    - variable error not appearing in either incorrrect password or user already exists












- persist error messages in firebase
- track stats in admin
- exporting stats as CSV/JSON
    - maybe a python program that runs on server and this python creates the csv dynamically
    - another option: download JSON directly from firebase, write a python program that converts to CSV
- some work around for students without email address??
    - the meredith@213.tag approach
        - put a check so she can never reset password (if ends in .tag)
        - password could be a hash code (deterministic - always same value)
- prevent infinite creation of accounts
- cross




PERSISTING ERROR MESSAGES
- error message: str
- date: str               //javascript gives local time/convert to utc time/convert to firebase formats
                            //year/month/day
- user: str

- context that generated the error
    - JSON object 
        - function:...
        - module
        - mode


try
catch {
    persist.set....
}


ADD
tutorial pages
lightbox should feel like a reward
cheat sheet on a new tab
make quick mode more minimal




- overlapping tags in tagger
- targeted/customizable tags in tagger  
    - something like: delete all autotags, tag one thing, give it a property (custom tagged)
- enable "disk persistence"? (https://www.firebase.com/docs/ios/guide/offline-capabilities.html)
- improve login
    - alert user on all errors (fix bug)
    - check your email to confirm (to prevent maliciously creating many users)
- word selector such that it can support underneath translations
- non-clickable header in dropdown
- hiding admin from malicious children
- just hide spread operator??
- fill in the blanks skeleton version



MEDIATEMPLE
- DNS server
    - converts url into an ip address (internet protocol)
    - will get pointed to ip address that's hosted by media temple
    - media temple "serves" a package of javascript and html to a client
    - perhaps need a top level domain name??
- prerequisites
    - obfuscation
    - hiding the admin page
    - ftp client
        - transfers my data to media temple
        - e.g. filezilla
        - navigation
            - name of domain    
                - http (top level/root)
                - I need to move my top level (e.g. login) to http



- feature complete
- AGILE methodology
    - quick iteration
    - user stories
    - sprint




NEW FUNCTIONALITY
- text input mode
    - spell check
    - strip all punctuation
    
    var test_correct_string = "the bear loves the horse"
    
    <input type="text" id="answer_input_box">
    var answer_input = el("answer_input_box").value;
    var answer_input_2 = answer_input.replace(/[.,!]/g,"");
    var answer_input_3 = answer_input_2.replace(/\s{2,}/g," ");
    var answer_input_4 = answer_input_3.toLowerCase();
    
    if (answer_input_4 === test_correct_string) {
    console.log("correct)
    } else {
    console.log("incorrect! The correct answer is: ", test_correct_string);
    }

    
AGENDA
- get existing taxonomical data from dan
- research non-clickable header in dropdown

AKIVA
- remove all users except the good ones from firebase
- add dash and star parameters to modules
- add metacharacters to latin
- move latin to pre-footer
- rework the give away answer in latin mode
- remove dashes from the regex list of strip 
- add macrons to the word-selector 

DAN
- can we do our range sampling on true and false?

DAN
- refactor drop downs and sorted drop downs to allow for optgroup headings
    - e.g.  see {sees, see, saw, will see} fear {fears, fear, feared, will fear}
    
- refactor lexeme list so that it can create a vocabulary list 
    - using the value -   drop_down_settings: {noun: {lexicon_dummies: int} }
  
  
  
SUNDAY CRUCIAL
- strategize entry of new words and roots into etymology
- improve tagger
    - the dashes problem
    - the macron problem
- automatic entry of latin
- tagging a sentence as being in latin or english etc.
- overlapping tags in tagger
- implicational tags in tagger  
- get existing taxonomical data from dan
            
SUNDAY ALSO CRUCIAL
- fix the outside the box bug   
    - either move latin from pre-footer footer or just always have it above the submit button
- test etymology mode
- test optgroup
- test vocabulary cheat sheet
- finish dash and star removers
- clean up line breaks in admin page
- correct answer should overlap with the question: incorrect: LATIN and english togetherr





AKIVA
- map out what a taxonomy module would look like
- tweak levels and modules so there are a lot more
- put modules in units of 10
- add buttons to admin page
- comment tagger

DATA
- add sentences in english
- add words and roots

ADD FUNCTIONALITY
- change drop mode to quick mode
- experiment with converting latin to quick mode (a la duolingo)


DOWN THE ROAD FUNCTIONALITY
- taxonomical nested drop down for nouns (navigate taxonomy to animal)


SMALL THINGS
fix placeholders
fix “now click on the correct answer”
non-improving completed modules shouldn’t turn red when hovered


UNKNOWN BUGS
- wrong denominator
    when improving: CONGRATULATIONS test friday 3:30!
    YOUR PROGRESS IS: 2/12 (on a level that’s 1/6)
- eyes peeled for: no highlighted
- eyes peeled for: outside the box


















THE ANONYMOUS PROFILE DILEMMA
- how can you remain anonymous while preserving your identity
    - write a temporary anonymous user to firebase
        - gets deleted at end of session   
    - create an object that can be passed to profile???
    - cookies
         - 4kb limit
     - html5 local storage
        - 5mb limit
- is it worth it?
    - easy fix: no profile 
    


MONDAY
- cross-browser bugs  (safari handles arrays differently)
- persist errors to firebase?
    - call graph
        - statically a tree
        - but at runtime it's a graph
- anonymous mode
- look at metrics





EXIT STRATEGY
- make latin words more sophisticated objects, so they can be hoverable and clickable
- jquery
- webscraping
- customizable questions



TODO
- encapsualte user.get_profile()
    - i.e. everywhere it says user.data.profile


STEPS TO ETYMOLOGY
- translate to javascript
- add one fields to each word
    - minimum count before definition disappears
    - set our default at 5
- block out persist statements
- word history initialized as false when user get's created
- (also have to initialize a part of speech history when user get's created)


GAMEIFICATION
- how do they quit improving? do we want them to quit improving? will they get discouraged if they don't improve

LITTLE THINGS
- word selector should only have hovering behavior in quick mode

SUNDAY
- current module needs to be sensitiive to advancing or improving
- make onclick only activated for improving and advancing
- debug improve mode
- debug lightbox  3/8 when threshold is 5
- debug anonymous mode
    - add login button to header
    - create a property of quiz called anonymous.level or something & check for anonymous mode at the beginning of every quiz function
- debug icon name
- add etymology
- add etymology material to lightboxes
- add grammatical level to module and incorporate into quick mode and drop mode
- 

AGENDA
- run a full test
- lightbox bug is still there
- fix icon name bug
- anonymous message
- admin page
- make only improving and advancing hoverable
- add cheat sheet toggle
- turn off hoverable word selector
- add player level to profile page
- add aggregrate accuracy to profile page


- range-sampler
- test none display and potential no object drop

ADD FUNCTIONALITY
- profile page for anonymous user
- make past frontier items non-hoverable
- customize alert boxes
- accuracy is small but when you hover it gets bigger
- every end of module should bring you to the profile page


CROSS-BROWSER BUGS
---Safari
    - basically functional
    - if you click improve before starting, you get the error:
    TypeError: undefined is not an object (evaluating 'this.user.data.history[1].iteration') profile.js 26
    profile.js 26 reads: if (this.user.data.history[1].iteration == 0)
    
    - if you click cheat sheet button you get:
    [Error] TypeError: undefined is not an object (evaluating 'ALL_MODULES[mod_id].cheat_sheet')
	quiz.js 373 says: var cheat_sheet = ALL_MODULES[mod_id].cheat_sheet;
	
	- in grammar modes:
    TypeError: undefined is not a function (evaluating 'Array.from(set_of_indices)')

	
--FIREFOX   
    - same trivial bug as firefox (click on improve at very beginning)
    - if you click cheat sheet button you get:
    TypeError: ALL_MODULES[mod_id] is undefined
    quiz.js 373 says: var cheat_sheet = ALL_MODULES[mod_id].cheat_sheet;
    
BUGS
- latin appearing outside of box???
- toggle cheat sheet doesn't seem to work on a single click
- the ups hack is not working if you click on the level you are advancing on you still get mod parameters and that sets it as status= improving

- in profile, when you hit improve and you have no current improving, it shows Uncaught TypeError: Cannot read property 'iteration' of undefined
- lightbox message is wrong (3/8)
- at higher levels in mcmode english answer choices occur outside of desired box 
- no object in latin sentence -> no drop down in object (might be because of none mode)


SMALL FIXES
- remove - now click on the correct answer
- give away answer should include the latin phrase

EXIT STRATEGY
- latin strings clickable at every points
- GUI for customized questions

MORE AMBITIOUS
- clickable charts

DEEPER ISSUES
- macrons make a word separation, might not be an issue yet

BEFORE GIO
- make admin page more ambitious
- add logout button for profile page
- rework the improve/advance functionality
- add cheat sheet toggle

GIO
- creating a scope for the buttons and binding that scope to other scopes
- logging error messages
- make mediatemple account and start hosting
- going backwards brings a person to password and its visible and can be clicked forward


GIO ???
- for anonymous mode: is the general move to say if(!user.uid) {//some code} else {our current code}
    - 

BUGS
- advance -> improve -> profile
    Uncaught ReferenceError: get_percentage is not defined
- lightboxes aren't getting filled with text
- create some scope for the window page???
- anonymous mode in banner
    - anonymous warning in banner is displayed but id is undefined
        Uncaught TypeError: Cannot read property 'id' of null



TEST
- can we switch between advance and improve

NEW FUNCTIONALITY
- vocabulary cheat sheet button
    - 
- add something that randomly changes mode during a progress bar??
- support for range-sampling e.g. level: [1,5]
- improve button
    - improve -> module with iteration > 0 & in_progress = true
    - if no module description - alert: click on the module you want to improve
- add logout button for profile page
- macrons
- avoid identical question?


??? for GIO
- in the new mode (with url parameters) we still want no history to be created
- binding in window

TODO CLEANUP, ABSTRACTION AND MODULARITY
- abstract get accuracy and turn it into a util

TODO BUGS
- add line breaks to admin page
- english sentences in box are getting created multiple times


PROFILE PAGE FUNCTIONALITY
- all modules displayed with:
    - completed: accuracy  (hoverable only if no improving has been selected yet, black)
    - completed, improving: improving x/y old accuracy, new accuracy (hoverable, green)
    - in progress: x/y (e.g., 5/10), accuracy percentage (hoverable, red)
    - uncompleted: blank    (not hoverable, grey)



ADMIN FUNCTIONALITY
- number of iterations
- accuracy for each iteration
- aggregate accuracy
- nested explorer-type display




TODO DATA FUNCTIONALITY
- a function that returns eenglish sentences:
    Zeus loves Mars
    Zeus attacked Mars with a spear
    the Chimera lives under the stairs
    
    
TODO COSMETIC
- create optgroup for verbs


TODO BUGS
- 
- logout button & return to profile not working except as global functions - where should they be if not global?
- when a submodule is complete - lightbox says: "Your module score is: undefined"
- deep design issue: we need some layer of multiple tagging "we" is a personal pronoun and also a subject
- the give away function should be changed
    - give away with a lightbox and a next butto
- "that's a adverb"
 - "your module score is undefined"
- @ quiz.js 169 Uncaught TypeError: Cannot read property 'progress' of undefined
- when graduating a module 4/5 -> 5/5
- probably: logging out of a session resets progress bar but doesn't reset the metrics (i.e. question correct)


TODO ????
- aren't next_module and next_submodule redundant?
- //todo understand the following
    this.game.quiz = this;
- submodule_complete is done in both user.js and quiz.js 

TODO add functionality
- give away answer needs improving:
    - in question box: keep the question reformulated as: whoops, the _____ is highlighted
    - in word_selector: the answer gets highlighted
    - create an element next
- finishing the game should take us somewhere predictable
    - lightbox: congratulations you've beaten every level, now work on your accuracy
    - documet.location is set to profile

- avoid asking the identical question twice in a row
- want to avoid situation where accuracy is persisted so much that we lose granularity and its hackable
    - i.e. profile play profile play profile
- add anonymous alert to header

TODO make elegant
- put all html into the abstract make form

TODO
persist error messages to firebase
profile.js needs to send data to quiz.js as to what module to do    
    - perhaps via url parameters (e.g. ?mod=3)
- add the improve mode
    - add but freeze out everything for now
- finishing module should move the player to profile page
- test drop mode
- incorporate latin
- go through code and comment






TODO fields

(improvement can be inferred from in_progress = true & iterations > 0)
how do we determine what their progress is on improvement modu
the difference between improve and advance is whether iterations > 0


history / module_id : {
    iterations: 2        0-many
    in_progress: bool
    progress: 8/10
    metrics : {
        iteration : {
            wrong: {
                0:
                1:
                2:
                3:
            }
            }
    }
}

//total questions = wrong[0] / total_count





TODO
- speed of module <-> desire to improve a module
- low improvement rate -> frustration at improving
    - so if no exit from improving level, -> john doe will stop improving





TODO loose ends
- put a border around current module
- make modules clickable with lightbox/alert for "do you want to improve your accuracy"
- metadata for sentence (author, date, etc.)
- anonymous mode
- in non-anonymous mode - populate header with name and level
- mode change within submodule
    - 

- admin page
- drop mode
- lightbox
- set up on media temple
- obfuscation and general defensiveness
- tracking data
    - make sure the tracking of questions and such is robust enough to allow a full statistical analysis
    - total count of questions
    - count correct
        - specified for each sentence
        - specified for each mode
    - count incorrect
    - incorrect streak (pushed to list, maybe, and given an average??)
        - produces # of times max_incorrect_streak reached
    - goal:
        - see the stats for each module (for Akiva to tweak backstage)
        - see the stats for each kid (so kids and parents can see their progress)
        - see the stats for a grade level (so Akiva and parents can compare individual progress to collective progress)
    - where to store individual data
        - in history (module by module)
            - count correct
            - count incorrect
            - max streak reached
    - where to store metrics on sentences
            - in sentence object
            - fields
                -count correct
                - count incorrect
                - max streak reached
            - each field has to be initialized upon creation (because firebase doesn't create fields in they don't exist)
    - operations to aggregate data 
        - iterate over users to produce an aggregate module metrics
        
        
        
        - in each individual user
            - count correct
            - count incorrect
            - max streak reached
        - 
        - in a separate region
            - metrics
                - sentence_id
                    count correct
                    count incorrect
                    max streak reached
            - each field has to be initialized upon creation (because firebase doesn't create fields in they don't exist)
- incorporate latin





TODO questions
- there must be a better way of setting every default to 0, instead of my hacky for loop

TODO CHORES
- remove debugging and add LOG statements
- make a fuller list of tags for sentence
    -predicate
    -adjective
- send some sentences to firebase for testing
- make a module sequence
    - order of animals
    - images of animals in folder
    - set parameters for each module

TODO IN LATIN
- separate allowed lexemes from level, make allowed lexemes part of modules

TODO CLEVER
- come up with a function that takes a span [100, 300] and, as a module progress (1/10-10/10) samples from an appropriate part of that range

TODO REFACTORING
- make a control flow of user and persist
- eliminate all global functions
    - make modules a class
    - make persist a class
- get rid of state
    - make quiz an object
        - this.question_count

USER
- change_password (move from persist.js)
- login_user (move from persist.js)
- create user

PERSIST



QUIZ



TODO
- set_module score
- alert on close (you will lose all progress)
- module complete (10/10) should trigger a new lightbox and a new module
- generalize lightbox creation and new stage
- isolate all the parameters possible (e.g. reward, penalty
- mode should be anle to change within a single progress bar
- change data loaded to sentence data loaded & generalize load in persist to load_path
- make progress count
- get a browser name & set up mediatemple
- update user data with more recent categories (bar count, module, etc) - where it says set_user_data("score", state.score); in quiz
- check if we really need anything as complicated as: (state.bar_count * state.current_module_reward) / state.bar_threshold) / state.current_module_reward >= 1
    - can't we just say bar_count = bar_threshold??
- make a header with logout, see profile
- reporting all scores
- grey out submit button
    -
- other browsers:
    - firefox:
        - login & profile work
        - game: dropdown is huge for a second and then goes away / play is a little buggy with red highlighting but basically works
    - chrome:
        - login and profile work
        - [Error] TypeError: undefined is not a function (evaluating 'Array.from(set_of_indices)')
          	(anonymous function) (firebase.js, line 43)
- make an absolute reference to the logout button in header


SCORING ARCHITECTURE TODO
- change mode_streak to progress_count

SCORING ARCHITECTURE
- bar_count
- bar_threshold


hit progress threshold
    lightbox: congratulations
    on close: increment module_count
    if module_threshold has been reached
        lightbox: congratulations
        on close: next module
        reset progress bar
    else
        reset progress bar
    reset progress bar

- module_count
- module_threshold


- bar_score (variable - based on mode)
    - bar threshold
    - set by mode_streak
- module_score (e.g. 8/10) (denominator based on module)
    -
- module (i.e. what module you're in)
[question: should mode be able to change while still in a single progress bar??]




????
- should score and question count be used at all???
    - it might be good for backstage stats and analytics

MEDIATEMPLE
- maybe get a toplevel domain name
- the domain name points to the server (hosted by mediatemple)
- FTP connects me to server (uploads my js files to mediatemple)
    - can also connect to the command line at the server
- the server at mediatemple serves js files to kid's computers 



RESEARCH
- FTP (filezilla)
- SSH (putty for windows)
    - connecting to the command line
    - maybe do it straight from the mac command
- CRUD
    - data-binding


????
- path name not working
    // document.location = "../../profile/profile.html";
    //todo this is wrong here below - why doesn't above work?



    





TODO PRIORITY FOR WEEKEND
HIGH PRIORITY

- send Dan a link and have him do a login test
- research media temple


- quick test run of integrating latin

LOWER PRIORITY
- in Latin, convert debugging to logs
- give a functionality/bug report
- integrate Latin
- add categories to tagger
- try some implicational tagging
- clean up files / rename / archive all obsolete versions


TODO non-programming
- set up media temple (reorder credit card)
- research lightbox
- check performance on other browsers
- check performance on ipad & iphone & surface table


TODO GIO QUESTIONS
-$
    - $ is not defined
    - how is $ handled??? does it need to call an internet library or is it offline
- should score & question count etc. still be part of state or should it be metadata in user??

TODO LIGHTBOX RESEARCH
- event listener for closing lightbox
- random gallery test

TODO HTML CSS RESEARCH
- how to make radio button hoverable???
- widen input box for email and password
- make link hoverable at bottom???
- how do you set the default for links?
- randomly populate a div with images



TODO COSMETIC THINGS TO ADD
- randomly populate login page with background images (faded out sillhouettes)


TODO
- test reset password
- should score & question count etc. still be part of state or should it be metadata in user??
- start adding lightbox
- integrate latin
- punctuation runs over in test box
- create a generic drop down (JSON)
- persist skills and animals they have
- sidebar
    - grammar mode
    - latin mode
        - cheat sheets of varying quantity (e.g. at early levels they only have one cheat sheet but at higher levels they have more cheat sheets)


TODO LIGHTBOX APPROACH
- wrap or just include?
    - next_question() is what transitions from question to question
    - so do we wrap or just include or trigger next question on event:close lightbox?
        - wrap next_question()
            - if session_count <= lightbox_count:
                - call next question
            - if session_count = lightbox_count
                - call lightbox
                - ???but what goes under the lightbox? Do we call next question
        - just include featherlight inside of next_question()
            - if we call $.featherlight(e) will it still call the next function in n
        - event listener



TODO NEW FUNCTIONALITY
- automate the obfuscation???
- multiple tagging
    - we should be able to tag something as e.g. both subject and personal pronoun
- implicational tagging
    - subject | object -> noun
- some clever way of making variety in the question types
    - (randomization but also sensitive to proportion)
    - e.g.
    - latin sentences should be 80%
    - quick mode = 10%
    - drop mode = 10%




TODO ADD??
- confirm email in create account??





TODO cheat sheet
- different kinds of cheat sheet based on what mode of game they're in
    - grammar: links to txerminology
    - latin: charts

TODO COSMETIC IN QUIZ
- give more space to the cheat sheet
    - scorebox on the left
    - instructions on the right
    - anonymous alert small and beneath scorebox








TODO
- in quiz.js in generate_question_ui we have a new wordselector getting created and that clears the highlighting
- split up process incorrect answer into two parts
    - process incorrect answer
    - give feedback of the type: no that's a _____, try again

GAME OBJECT
we want a game object
    - properties
        - mode
    - methods
        - generate targets and dropoptions
            - should be level sensitive (i.e. only ask about things they've learned - nouns and verbs early etc.)
            - have to be careful to avoid deformed weightings
        - set the text of the questions and feedback
        - populate the html
            - wordselector object that needs to be either clickable or non-clickable
        - give away answer

DIFFERENCES BETWEEN MODES
- testbox
    - wordselector not clickable in drop mode
    - highlight can't be cleared in drop mode
- feedback box
    - give away answer is different in drop mode (needs to either highlight the answer or display the answer as text)
- extras
    - submit button in drop mode but mot in quick mode


AGENDA
- create a quiz mode object that has functionality of

    - generate question
        - returns:
            - target_tag
            - target_region
            - available_tags

    - generate-question ui
            - populate the HTML
                - questionbox: question_text (e.g. click on the word that matches...)
                - testbox: a wordselector object (either clickable or not clickable)
            - mechanics of game
                - refresh_score
                - set_highlighting if necessary (e.g. in drop mode)
                - process answer
    - submit_answer
        - either quick_click or submit button
        - process correct answer or process incorrect answer
            - incorrect answer


    - process answer
        - when we're in quick mode we need to pass in the tag_names in order to give away answers


    -
    - give away answer



- persistence of score across sessions (search terms)
- how to change html formats (quick mode vs. drop-downs e.g. bestiary)


???s for GIO
- how does data_loaded get the argument "data"?
- what exactly does click_callback really do?
- how does click_callback get its argument "index"?


BUGS
- in drop mode the correct answer is always last in the drop downs
- quick mode doesn't seem to be working now that drop mode has been added
- make multiple highlights not all add as a single region (e.g. dog bell father should be three separate regions)
(maybe make a separate action for multiple buttons)
- make process_bracketed_text only display the brackets in the box, not actually add them as words


API FOR QUIZ OBJECT
- load
    - basically it's a wrapping of our overall control flow
    - needs to be a callback because we're communicating with firebase
- data_loaded
    -
- load sentence
    - needs to be deserialized
    -
    - load is a callback in persist.js
- generate question
-




CURRENT BUGS
- in quick mode, the brackets don't behave properly
    - they toggle without submitting answer
- safari doesn't work?

GAMEPLAY FIXES
- a correct answer sometimes makes it hard to register that there's a new question (especially when the question is identical)
- maybe something like "Correct, now click.."
- once a few questions are answered correctly it should graduate to a new sentence
- needs to only ask questions based on tags they know


COSMETIC BUGS
- feedback box being empty or full is pushing questionbox around
- this is happening: verb = sings
                     verb = jumps made rings is lifted


GIO QUESTIONS
- why can't I migrate test sentences to another file?


CHORES
- increase number of tag buttons (relative clause)
    -
- put sentences in a different file
- research unicode
- make an offline version of quiz that doesn't query firebase

COSMETIC
- why isn't sentence box centered the same way box is?
- center score, different font
- indent question and feedback section
- put a box around text
- picture box below with author


ADD FUNCTIONALITY
- coordinate clause should be read as main or subordinate based on their leftward sibling
- 2-step tag type (user tags: "relative pronoun" and wizard asks: "what's the antecedent?")
    - or what part of speech -> noun -> what is the syntax
    - or relative pronoun -> what is the antecedent
- unicode characters need to be added to word character regex match (text.js line 23)
- subject & object tag should imply noun
- input brackets with mouse
-
- the 1st & 3rd column doesn't seem to display all the tags (e.g. possessive adjective)
- return a measure of nestedness
	- max number of subordinate layers
	- total length
	- number of subordinate clauses
- parameterize score into a total (e.g. correct = +3, incorrect streak of 3 = -1, score = correct - incorrect)
- subject of which clause?
- coordinate clause read their subordination level during autotagging
- custom question input


LATIN MODE GAME
- make sentence data
    - word selector not clickable
    - submit button + drop down
    - target_sentence
    - answer_sentence
    - available_options


WEBSCRAPING
- find parts of speech
- deliver a score of vocabulary/reading level



DOMAIN SPECIFIC FUNCTIONALITY
- antecedents
- discontinuous clauses



DOWN THE ROAD STUFF
- "collect" authors








functionality to add - smaller
- delete a single tag (as opposed to delete all tags) (would be useful when correcting a mistake)
- quick mode
- feedback with 3 cells
    - whoops. that's a ____. try again. (Question stays up)
    - correct.   null.   null.               (next question.)
- anything that isn't autotagged could be a specific color
    - i.e. gives you a sense of what hasn't been done
    - i.e. you load a sentence, everything is grayed out that hasn't been autotagged
    - complication (could do it for only single-region tags)
- level
    - autolevel: 1-10
        - quantify complexity: degree of nesting
        - quantify vocabulary: "reading level"
        -
    - minimum age: x
    - progress level: 1-5                 (hit)

- custom question ("is the following highlighted word an adjective or an adverb")
- coordinate clause needs to be set at the same level as its "sibling"
    - i.e. if its sibling is main, then it's main and if its sibling is subordinate, it's also subordinate
    - i.e. if it's surrounded by () -> it's subordinate
- safari runs totally differently (firefox seems ok)


functionality to add - bigger
- improve the autotagging - possibly via webscraping?




recoding
- make all the clauses consistent




DOWN THE ROAD
- useful to have a button that sets the level of the sentence (i.e. if it's a hard sentence it gets a higher level)
- a box for custom questions - e.g. "Find at least 3 prepositions in the following sentence"










set not implemented in explorer and safari
so, question 1: is set doable at all?
question 2: why do a set in the first place if it has to be converted into a list?



TODO

make new clause objects when the button is clicked (main clause, subordinate clause, etc.)

coordination

keyboard tagging



TODO

make main clause processed by process bracketed text (currently it only creates subordinate clauses)




TODO

where did make clauses go - where should it go
















this.add_tag = function(tag) {
        if(tag.get_tag_type().indexOf("clause") !== -1) {
            region.make_clause(tag_type);
        }
    };




Dan's code
some returns true if some satisfy the condition









POSSIBLE IMPROVEMENTS
make words in play a parameter not a global variable



AGENDA FOR SUNDAY





- indices issue
- add open-bracket tagger
- run some twine grammar game questions as a test
- run some latin sentences

TODO NEXT
- clause.superordinate & clause.subordinate & clause.coordinate_left & clause.coordinate_right
- adding coordinating functions
- create an ability to highlight multiple words and then click button and that gives separate regions (subject, object, noun, verb, etc)
- auto-tagging
    - expand auto-tagging dictionary
        - add more pronouns, etc.
    - link auto-tagging dictionary to a web scraper (which would auto tag nouns, verb, adjs, advs, etc.)
    - display auto-tags and confirm/disconfirm


TODO IN LATIN GENERATOR

- make a map from level to allowed parameters (language dependent)
- create a mental verb module
- make a kernel/conjunction generator
- make agreement and the verb to be
- make_conjunction




TODO with Gio





TODO bugs
- subordinate clause is getting entered twice
- in CLEAN OUTPUT we get undefined=which my father made ) rings



TODO bigger fixes



TODO questions
- how should quotes be tagged
    - author, work, integer
    - author + integer (with an option for anonymous, unknown, author?)
    - integer (sounds like a bad idea)



TODO brute force tasks
- bracket some latin sentences for tagging
- bracket some sentences from the twine grammar game
- add to dictionary of words that can automatically tag words: the, a, under, when, although, if



TODO DILEMMA
- on the one hand:
    - we want a region to be tagged with something like "main clause, subordinate clause, etc."
        (i.e. we want this to be parallel with the tagging of nouns and subjects)

- on the other hand:
    - we want an easy way to access the different clauses in a sentence
        e.g. we want to be able to ask easily clause.subject is what?


the fork in the road:
1) - make a Clause object which is the tag of a region'
    - it's accessed via region.tags[0] or some semi-clunky way (is there a better way to access it?)
2) make a property of each region which is region.clause
    - obviously this would be irrelevant for nouns and verbs etc.
    - but it would be easy to access



EXAMPLE OF NEW MAKE FUNCTION

<tr id="row1" class="hoverable">
    <td>column 1</tr>
    Some Text
</tr>

var gui = {
    tag: "tr",                      //or div, a, img, button, etc.
    id: "row1",                     //
    children: [                     //children = whatever ends up inside the tag
        {tag: "td", text: "column 1", onclick = function(){ }   },   //can have a recursive tag and text inside of it
        "Some Text"                                         //textNode inside the tag
    ],
    text: "hello world"
    class: "hoverable"                  //gives a className to everything in the tag, in this case tr

};

make2(gui, container)


NB: you can't have both children and text. If you want text, just put it in children
i.e. text is just a shortcut for putting in a single children

{tag: "whatever". text: "hello"}

{tag: "whatever". children: ["hello"], text: "xxx"}








SOCIAL ENGINEERING:
competition:
    - we want to encourage students to compete with each other at two levels simultaneously:
    	- "advance" highest module
	    - "improve" repeat module (improve accuracy) 
focus:
    - we want students to be focussed, i.e. we don't want students to be able to jump from module to module. I.e. it would be too crazy to be playing too many modules at once





OPTION 1: locked in improvement
	if a student chooses to improve, they're locked in improvement until they finish 
		- pros: more focused
		- cons: trapped feeling
		
OPTION 2: parallel advance & improve
	- on any given session, a student can either improve or advance and they can switch back and forth between those two modes
		- but of course they can only be improving on on one level at a time
	- e.g. 
		- Vincent is on level Kraken 7/10
		- his buddy John is at the same level but his accuracy is higher at lower levels
		- so Vincent goes home, clicks "improve"
			- message: "you've chosen to improve your accuracy - pick the module you want to improve"
			- he picks kangaroo
				- his user profile changes and locks him in at kangaroo for improving
				- he starts improving at kangaroo
				- his profile now looks like this:
					- kraken has a box around it and is red
					- kangaroo has a light box around it saying "improving" or something like that
					- he has two buttons: "improve" and "advance" 
					- improve takes him to kangaroo
					- advance takes him to kraken
		- pros: encourages both modes
		- cons: harder to program








LEXEME LIST REFACTORING

We need a double-duumy lexeme list.
Question: Should we put all our lexeme lists in some master lexeme list?
master_lexeme_list is an object??? No.
Organization of master lexeme list:
lexemes property: all lexemes
Some lexeme_list_name: types_of_lexeme_used pairs.
get_lexemes: takes list name, returns lexeme dict.
var master_object = {
    lexemes:   {subject: dog, 
                verb: eat, 
                object: cuckoo,
                dummy_noun_0: dragon,
                dummy_noun_1: snake,
                    double_dummy_noun_0: fish,
                    double_dummy_noun_1: cat
    },
    all_lexemes: [subject, verb, object, dummy_noun_0, dummy_noun_1, double_dummy_noun_0, double_dummy_noun_1],
    dummy_lexemes: [subject, verb, object, dummy_noun_0, dummy_noun_1],
    lexemes_used: [subject, verb, object],
    get_lexemes: function() {/*
         examples:
         get_lexemes('all_lexemes') = [dog, eat, cuckoo, dragon, snake, fish, cat]   //used + dummy + double dummy
         get_lexemes('dummy_lexemes') = [dog, eat, cuckoo, dragon, snake]     //used + dummy
         get_lexemes('lexemes_used') = [dog, eat, cuckoo]
         should be able to use this to refer to master_object
    */}
}


Cartesian

1 : {
    
}



FIREBASE RULES THAT DON'T SEEM TO WORK

{
  "rules": {
    "users": {
      "$uid": {
        ".read": "auth != null && auth.uid == $uid",
        ".write": "auth != null && auth.uid == $uid"
      }
    },
    "log": {
      ".read": "auth != null && auth.uid == '8f01a98f-4575-4e83-aeea-1c3b042f5c4e' ",
      ".write": "auth != null && auth.uid == '8f01a98f-4575-4e83-aeea-1c3b042f5c4e' "
    },
    "sentence": {
      ".write": "auth != null && auth.uid == '8f01a98f-4575-4e83-aeea-1c3b042f5c4e' "
    }
  }
}





ARCHIVED PROGRESS NOTES
- Dan: finished latin question generation (has earlier functionality)
- Dan: got cheat sheets working correctly again (they now disappear)
- Dan: vocab cheat sheet now sorted
- Dan: about halfway through etymology
- Akiva: added start and stop time stamp to module
    - still a little buggy: doesn't create a new start-time if they quit and start over, need to push to a list or something like that instead of rewriting a map
- Akiva: added start and stop time stamp to submodule
   - has the same problem as module, needs to preserve old start times that were abandoned
   - need to add iteration, right now it just records submodule number
- Dan: fixed drop downs to show everything in part of speech filter
   - previously only choices in the sentence were showing
- Akiva: finished all latin levels up to most advanced level we have, not fully proofread yet
- Akiva: made etymology level up to level 7
- Akiva: fixed the problem of images that are too big
- Akiva: fixed the off by one error by simply changing index to index -1
- Dan: fixed the 'undefined' latin bug and the highlighting bug
- Dan: fixed the word selector highlighting bug
    - (word selector cleared in quick mode after next question is created)
- Dan: fixed the double confirm bug
    - break in 'if', not outside
- Dan: it seems that the last of the bugs is dead
   - let us rejoice
   - a default value of 0 for nothing answered yet is used
- Dan: fixed all bugs; added a parameter in quiz for whether lightboxes would urge user to continue
- Dan: fixed hover behavior (almost; it seems that to make background color
change with images that are not png is difficult)